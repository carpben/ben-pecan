{"version":3,"sources":["general/utils/object.ts","api/mockConfig.ts","api/mock.ts","app/requests.ts","general/styles.ts","general/components/Button.tsx","app/NodeComponent.tsx","app/App.tsx","index.tsx"],"names":["reliablyGetValues","Object","entries","values","i","reliablyGetEntries","mapObj","obj","mapper","ret","forEach","k","v","getChildren","count","type","Array","from","reduce","accum","val","name","canAccess","mockConfig","dbMock","pathKeys","requestChildren","keys","Promise","resolve","reject","setTimeout","result","path","length","success","message","dataAhead","pathAhead","key","shift","newNode","children","node","undefined","getNode","styleCenterSingleChild","css","styleInputNormalize","Button","props","handler","stl","other","otherProps","onClick","style","cursor","NodeComponent","React","memo","openNode","useState","open","setOpen","openChildNode","useCallback","console","log","clickable","renderChildren","display","color","fontSize","marginBottom","disabled","width","icon","faFont","faChevronDown","faChevronRight","marginLeft","slice","map","child","App","useImmer","tree","setTree","openBranch","setOpenBranch","useEffect","a","childrenKeys","flatten","branchName","draftTree","set","request","margin","nodeBranch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e998b99a.chunk.js","sourcesContent":["export const reliablyGetEntries = Object.entries as <T extends object>(obj: T) => Array<[keyof T, T[keyof T]]>\r\n// const getObjectKeys = <O extends object>(obj:O) => Object.keys(obj) as Array<keyof O>\r\nexport const reliablyGetValues = Object.values as <T extends object>(obj: T) => Array<T[keyof T]>\r\n","export default {\r\n\tchildrenCount: 10,\r\n\tcanAccess: (i: number) => i < 5,\r\n}\r\n","import { NodeChildren } from \"../app/types\"\r\nimport mockConfig from \"./mockConfig\"\r\n\r\nexport const reliablyGetEntries = Object.entries as <T extends object>(obj: T) => Array<[keyof T, T[keyof T]]>\r\n\r\nexport const mapObj = <K extends string, V extends any, T extends any>(\r\n\tobj: Record<K, V>,\r\n\tmapper: (val: V, key: K) => T,\r\n): Record<K, T> => {\r\n\tconst ret: any = {}\r\n\treliablyGetEntries(obj).forEach(([k, v]) => {\r\n\t\tret[k] = mapper(v, k)\r\n\t})\r\n\r\n\treturn ret\r\n}\r\n\r\nconst getChildren = (count: number, type: string): NodeChildren =>\r\n\tArray.from(new Array(count)).reduce((accum, val, i) => {\r\n\t\tconst name = `${type}_${i}`\r\n\r\n\t\treturn {\r\n\t\t\t...accum,\r\n\t\t\t[name]: {\r\n\t\t\t\ttype,\r\n\t\t\t\tname,\r\n\t\t\t\tcanAccess: mockConfig.canAccess(i),\r\n\t\t\t},\r\n\t\t}\r\n\t}, {})\r\n\r\nconst initialData: NodeChildren = getChildren(mockConfig.childrenCount, \"connection\")\r\n\r\nconst dbMock = initialData\r\n\r\nexport const pathKeys = [\"connection\", \"database\", \"schema\", \"table\", \"column\"]\r\n\r\nexport const getNode = (path: string[]) => {\r\n\tif (path.length > 4) {\r\n\t\treturn {\r\n\t\t\tsuccess: false,\r\n\t\t\tmessage: \"invalid key list\",\r\n\t\t}\r\n\t}\r\n\r\n\tlet dataAhead: NodeChildren = { ...dbMock }\r\n\tlet pathAhead = [...path]\r\n\r\n\tlet i = 0\r\n\twhile (pathAhead.length) {\r\n\t\tconst key = pathAhead.shift() as string\r\n\r\n\t\tif (dataAhead[key]) {\r\n\t\t\tconst newNode = dataAhead[key]\r\n\t\t\tif (newNode.canAccess) {\r\n\t\t\t\tif (!newNode.children) {\r\n\t\t\t\t\tnewNode.children = getChildren(mockConfig.childrenCount, pathKeys[i + 1])\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataAhead = newNode.children\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsuccess: false,\r\n\t\t\t\t\tmessage: \"no access\",\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tmessage: \"no such key\",\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\r\n\treturn {\r\n\t\tsuccess: true,\r\n\t\tchildren: mapObj(dataAhead, (node) => ({\r\n\t\t\t...node,\r\n\t\t\tchildren: undefined,\r\n\t\t})),\r\n\t}\r\n}\r\n","import { getNode } from \"../api/mock\"\r\nimport { NodeChildren } from \"./types\"\r\n\r\nexport const requestChildren = (keys: string[]) =>\r\n\tnew Promise((resolve, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst result = getNode(keys)\r\n\t\t\tif (!result.success) {\r\n\t\t\t\treject(result.message)\r\n\t\t\t} else {\r\n\t\t\t\tresolve(result.children)\r\n\t\t\t}\r\n\t\t}, 100)\r\n\t})\r\n","import { css } from \"@emotion/react\"\r\n\r\nexport const styleCenterSingleChild = css`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`\r\n\r\nexport const styleInputNormalize = css`\r\n\tpadding: unset;\r\n\tbackground-color: unset;\r\n\tborder: unset;\r\n\t:focus {\r\n\t\toutline: none;\r\n\t}\r\n`\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css, Interpolation, jsx, Theme } from \"@emotion/react\"\r\nimport { styleInputNormalize } from \"../styles\"\r\nimport { DRFC } from \"../types\"\r\n\r\ninterface Props {\r\n\thandler: () => unknown\r\n\tstl?: Interpolation<Theme>\r\n\tother?: object\r\n}\r\n\r\nexport const Button: DRFC<Props> = (props) => {\r\n\tconst { handler, stl, other, ...otherProps } = props\r\n\treturn <button onClick={handler} css={[style, stl]} {...otherProps} {...other} />\r\n}\r\n\r\nconst style = css(styleInputNormalize, { cursor: \"pointer\" })\r\n","/** @jsxImportSource @emotion/react */\r\nimport { jsx } from \"@emotion/react\"\r\nimport { faChevronDown, faChevronRight, faEyeSlash, faFont } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport React, { useCallback, useState } from \"react\"\r\nimport { Button } from \"../general/components/Button\"\r\nimport { styleCenterSingleChild } from \"../general/styles\"\r\nimport { DRFC } from \"../general/types\"\r\nimport { reliablyGetValues } from \"../general/utils/object\"\r\nimport { NodeBranch } from \"./types\"\r\n\r\ninterface Props {\r\n\tnode: NodeBranch\r\n\topenNode: (keys: string[]) => unknown\r\n}\r\n\r\nconst NodeComponent: DRFC<Props> = React.memo((props) => {\r\n\tconst { node, openNode } = props\r\n\tconst { children, canAccess, type } = node\r\n\r\n\tconst [open, setOpen] = useState(false)\r\n\r\n\tconst openChildNode = useCallback(\r\n\t\t(keys: string[]) => {\r\n\t\t\tconsole.log(\"29\")\r\n\t\t\topenNode([node.name, ...keys])\r\n\t\t},\r\n\t\t[node],\r\n\t)\r\n\r\n\tconst clickable = canAccess && type !== \"column\"\r\n\tconst renderChildren = children && open\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Button\r\n\t\t\t\thandler={\r\n\t\t\t\t\tclickable\r\n\t\t\t\t\t\t? () => {\r\n\t\t\t\t\t\t\t\tif (open && canAccess) {\r\n\t\t\t\t\t\t\t\t\tsetOpen(false)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\topenNode([node.name])\r\n\t\t\t\t\t\t\t\t\tsetOpen(true)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t: () => {}\r\n\t\t\t\t}\r\n\t\t\t\tcss={{\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tcolor: canAccess ? \"unset\" : \"#888\",\r\n\t\t\t\t\tfontSize: 13,\r\n\t\t\t\t\tmarginBottom: 4,\r\n\t\t\t\t\tcursor: clickable ? \"pointer\" : \"unset\",\r\n\t\t\t\t}}\r\n\t\t\t\tother={{\r\n\t\t\t\t\tdisabled: !clickable,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tcss={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twidth: 30,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tstyleCenterSingleChild,\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\ticon={type === \"column\" ? faFont : renderChildren ? faChevronDown : faChevronRight}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{node.name}\r\n\t\t\t</Button>\r\n\r\n\t\t\t{renderChildren && (\r\n\t\t\t\t<div\r\n\t\t\t\t\tcss={{\r\n\t\t\t\t\t\tmarginLeft: 20,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{reliablyGetValues(children!)\r\n\t\t\t\t\t\t.slice(0, 5)\r\n\t\t\t\t\t\t.map((child) => (\r\n\t\t\t\t\t\t\t<NodeComponent node={child} openNode={openChildNode} key={child.name} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default NodeComponent\r\n","/** @jsxImportSource @emotion/react */\nimport { jsx } from \"@emotion/react\"\nimport { flatten, set } from \"lodash\"\nimport { useEffect, useState } from \"react\"\nimport { useImmer } from \"use-immer\"\nimport { getNode } from \"../api/mock\"\nimport { NodeBranch, NodeChildren } from \"./types\"\nimport { DRFC } from \"../general/types\"\nimport { useMountEffect } from \"../general/utils/lifeCycles\"\nimport { reliablyGetValues } from \"../general/utils/object\"\nimport { requestChildren } from \"./requests\"\nimport NodeComponent from \"./NodeComponent\"\n\nfunction App() {\n\tconst [tree, setTree] = useImmer<NodeChildren>({})\n\tconst [openBranch, setOpenBranch] = useState<string[]>([])\n\n\tuseEffect(() => {\n\t\tconst request = async () => {\n\t\t\tconst children = (await requestChildren(openBranch)) as NodeChildren\n\t\t\tconst childrenKeys = flatten(openBranch.map((branchName) => [branchName, \"children\"]))\n\n\t\t\tsetTree((draftTree) => {\n\t\t\t\tconsole.log(draftTree)\n\t\t\t\tif (childrenKeys.length === 0) {\n\t\t\t\t\treturn children\n\t\t\t\t}\n\t\t\t\tset(draftTree!, childrenKeys, children)\n\t\t\t})\n\t\t}\n\n\t\trequest()\n\t}, [openBranch])\n\n\treturn (\n\t\t<div\n\t\t\tcss={{\n\t\t\t\tmargin: 20,\n\t\t\t}}\n\t\t>\n\t\t\t{tree &&\n\t\t\t\treliablyGetValues(tree).map((nodeBranch) => (\n\t\t\t\t\t<NodeComponent\n\t\t\t\t\t\tnode={nodeBranch}\n\t\t\t\t\t\topenNode={(keys: string[]) => {\n\t\t\t\t\t\t\tconsole.log(keys)\n\t\t\t\t\t\t\tsetOpenBranch(keys)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tkey={nodeBranch.name}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./app/App\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\"),\n)\n"],"sourceRoot":""}